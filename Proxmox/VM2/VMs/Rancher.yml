  - name: Set Variables
    set_fact:
      vmName: K8s---Rancher
      diskStorage: local-lvm

  - name: Create VM | {{ vmName }}
    community.general.proxmox_kvm:
      api_user: "{{ proxmoxUser }}"
      api_password: "{{ proxmoxPassword }}"
      api_host: "{{ proxmoxUrl }}"
      clone: "{{ proxmoxCentosTemplate }}"
      node: "{{ proxmoxNode }}"
      name: "{{ vmName }}"
      proxmox_default_behavior: "no_defaults"
      full: no
      onboot: yes
    register: vmCreated

  - name: Wait for the VM to be created | {{ vmName }}
    shell: sleep 10
    when : vmCreated.changed

  - name: Update VM Settings | {{ vmName }}
    community.general.proxmox_kvm:
      api_user: "{{ proxmoxUser }}"
      api_password: "{{ proxmoxPassword }}"
      api_host: "{{ proxmoxUrl }}"
      name: "{{ vmName }}"
      node: "{{ proxmoxNode }}"
      cores: 2
      memory: 4096
      nameservers: "192.168.1.254"
      searchdomains: "ggmartinez.duckdns.org"
      ipconfig:
        ipconfig0: 'ip=192.168.1.50/24,gw=192.168.1.1'
      update: true
    when : vmCreated.changed
  
  - name: Add disk for /var/lib/rancher to VM | {{ vmName }}
    community.general.proxmox_disk:
      api_user: "{{ proxmoxUser }}"
      api_password: "{{ proxmoxPassword }}"
      api_host: "{{ proxmoxUrl }}"
      name: "{{ vmName }}"
      disk: scsi1
      storage: "{{ diskStorage }}"
      size: 10
      state: present

  - name: Add disk for /var/lib/kubelet/pods to VM | {{ vmName }}
    community.general.proxmox_disk:
      api_user: "{{ proxmoxUser }}"
      api_password: "{{ proxmoxPassword }}"
      api_host: "{{ proxmoxUrl }}"
      name: "{{ vmName }}"
      disk: scsi2
      storage: "{{ diskStorage }}"
      size: 10
      state: present

  - name: Done 
    debug:
      msg: "VM {{ vmName }} created successfully"

  - name: Start the VM | {{ vmName }}
    community.general.proxmox_kvm:
      api_user: "{{ proxmoxUser }}"
      api_password: "{{ proxmoxPassword }}"
      api_host: "{{ proxmoxUrl }}"
      node: "{{ proxmoxNode }}"
      name: "{{ vmName }}"
      state: started 
      update: true
