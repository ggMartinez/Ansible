---
- hosts: K3s
  tasks:
    - name: Install Python packages required
      pip:
        name:
          - pyyaml
          - kubernetes
          - urllib3==1.26.15
        extra_args: --user

    - name: Partition disks
      community.general.parted:
        device: {{ item }}
        number: 1
        flags: [ lvm ]
        state: present
      with_items:
        - /dev/sdb
        - /dev/sdc

    - name: Create VG for pods
      community.general.lvg:
          vg: pods
          pvs: /dev/sdb1
    - name: Create VG for K3s Data
      community.general.lvg:
          vg: k3s
          pvs: /dev/sdc1

    - name: Logical volume for Pods
      community.general.lvol:
          vg: pods
          lv: data
          size: 100%FREE

    - name: Logical volume for K3s Data
      community.general.lvol:
          vg: k3s
          lv: data
          size: 100%FREE

    - name: Format the volume with ext4 fs
      community.general.filesystem:
          fstype: ext4
          dev: {{ item }}
      with_items:
          - /dev/pods/data
          - /dev/k3s/data
      
    - name: Mount pods volume
      ansible.posix.mount:
        path: /var/lib/kubelet/pods
        src: /dev/pods/data
        fstype: ext4
        state: mounted

    - name: Mount k3s  volume
      ansible.posix.mount:
        path: /var/lib/rancher
        src: /dev/k3s/data
        fstype: ext4
        state: mounted


    - name: Check if K3s is installed
      shell: systemctl is-active k3s || true
      register: K3sActive
      changed_when: false

    - name: Download K3s install script
      get_url:
        url: https://get.k3s.io
        dest: /root/install-k3s.sh
        mode: '0755'
      when: K3sActive.stdout != "active"

    - name: Install K3s
      shell: sh /root/install-k3s.sh
      environment:
        INSTALL_K3S_VERSION: v1.24.10+k3s1
      when: K3sActive.stdout != "active"


    - name: Wait for kubernetes to initialize
      shell: sleep 120
      when: K3sActive.stdout != "active"

    - name: Check if K3s is installed
      stat:
        path: /bin/helm
      register: HelmInstalled

    - name: Download Helm
      unarchive:
        src: https://get.helm.sh/helm-v3.12.0-linux-amd64.tar.gz
        dest: /tmp/
        remote_src: yes
      when: not HelmInstalled.stat.exists

    - name: Install Helm on /bin
      copy:
        src: /tmp/linux-amd64/helm
        dest: /bin/helm
        remote_src: yes
        mode: +x
      when: not HelmInstalled.stat.exists

    - name: Creates directory for K8s Config
      file:
        path: /root/.kube
        state: directory

    - name: Create a symbolic link for K8s  config
      ansible.builtin.file:
        src: /etc/rancher/k3s/k3s.yaml
        dest: /root/.kube/config
        state: link

        
    - name: Dowmload Kubecolor
      ansible.builtin.unarchive:
        src: https://github.com/hidetatz/kubecolor/releases/download/v0.0.25/kubecolor_0.0.25_Linux_x86_64.tar.gz
        dest: /usr/bin
        remote_src: yes

    - name: Check if kubecolor alias exits in bashrc
      shell: grep  'alias kubectl=kubecolor' /root/.bashrc || echo 0
      register: kubecolorAlias
      changed_when: false

    - name: Insert Kubecolor Alias in bashrc
      lineinfile:
        path: "/root/.bashrc"
        line: alias kubectl=kubecolor
        insertbefore: EOF
      when: kubecolorAlias.stdout == "0"
      
  become: yes
  become_user: root